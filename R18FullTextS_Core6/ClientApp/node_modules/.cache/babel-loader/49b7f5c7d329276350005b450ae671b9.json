{"ast":null,"code":"var _jsxFileName = \"F:\\\\Ready to use\\\\GITMS\\\\REACT_FTS_FULL\\\\LAB\\\\ClientApp\\\\src\\\\Posts.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react'; //import { Col, Container, Row, Card, CardHeader, CardBody, Button, Form, FormGroup, Input, InputGroup, Label } from \"reactstrap\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Posts() {\n  _s();\n\n  //const [APIData, setAPIData] = useState([])\n  const [APIData, setMovies] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [filteredResults, setFilteredResults] = useState([]); //useEffect(() => {\n  //    axios.get(`https://jsonplaceholder.typicode.com/users`)\n  //        .then((response) => {\n  //            setAPIData(response.data);\n  //        })\n  //}, [])\n\n  useEffect(() => {\n    const response = fetch(\"api/movie/FindMoviesFullTextSearch\");\n\n    if (response.ok) {\n      const data = response.json();\n      setMovies(data);\n    } else {\n      console.log(\"error fetching data\");\n    }\n  }, []);\n\n  const searchData = value => {\n    setSearchTerm(value);\n\n    if (searchTerm !== '') {\n      const filteredData = APIData.filter(item => {\n        return Object.values(item).join('').toLowerCase().includes(searchTerm.toLowerCase());\n      });\n      setFilteredResults(filteredData);\n    } else {\n      setFilteredResults(APIData);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      icon: \"search\",\n      placeholder: \"Search...\",\n      onChange: e => searchData(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card.Group, {\n      itemsPerRow: 3,\n      style: {\n        marginTop: 20\n      },\n      children: searchTerm.length > 1 ? filteredResults.map(item => {\n        return /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(Card.Content, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n              children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                children: \"Movies\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Card.Description, {\n              children: [item.movieId, item.title, item.genre, item.castByMovie]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 29\n        }, this);\n      }) : APIData.map(item => {\n        return /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(Card.Content, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n              children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                children: \"Movies\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Card.Description, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Movie Id: \", item.movieId, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Title: \", item.title, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Genre: \", item.genre, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"Main Cast\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Genre: \", item.castByMovie, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 29\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Posts, \"sTOG0XDdZmougZ6rtdbe3yOQTJM=\");\n\n_c = Posts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["React","useState","useEffect","Posts","APIData","setMovies","searchTerm","setSearchTerm","filteredResults","setFilteredResults","response","fetch","ok","data","json","console","log","searchData","value","filteredData","filter","item","Object","values","join","toLowerCase","includes","padding","e","target","marginTop","length","map","movieId","title","genre","castByMovie"],"sources":["F:/Ready to use/GITMS/REACT_FTS_FULL/LAB/ClientApp/src/Posts.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n//import { Col, Container, Row, Card, CardHeader, CardBody, Button, Form, FormGroup, Input, InputGroup, Label } from \"reactstrap\";\r\n\r\nexport default function Posts() {\r\n    //const [APIData, setAPIData] = useState([])\r\n    const [APIData, setMovies] = useState([])\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    const [filteredResults, setFilteredResults] = useState([]);\r\n    //useEffect(() => {\r\n    //    axios.get(`https://jsonplaceholder.typicode.com/users`)\r\n    //        .then((response) => {\r\n    //            setAPIData(response.data);\r\n    //        })\r\n    //}, [])\r\n\r\n\r\n    useEffect(() => {\r\n            const response = fetch(\"api/movie/FindMoviesFullTextSearch\")\r\n\r\n            if (response.ok) {\r\n                const data = response.json();\r\n                setMovies(data)\r\n            } else {\r\n                console.log(\"error fetching data\");\r\n            }\r\n    }, [])\r\n\r\n\r\n    const searchData = (value) => {\r\n        setSearchTerm(value)\r\n        if (searchTerm !== '') {\r\n            const filteredData = APIData.filter((item) => {\r\n                return Object.values(item).join('').toLowerCase().includes(searchTerm.toLowerCase())\r\n            })\r\n            setFilteredResults(filteredData)\r\n        }\r\n        else {\r\n            setFilteredResults(APIData)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div style={{ padding: 20 }}>\r\n            <Input icon='search'\r\n                placeholder='Search...'\r\n                onChange={(e) => searchData(e.target.value)}\r\n            />\r\n            <Card.Group itemsPerRow={3} style={{ marginTop: 20 }}>\r\n                {searchTerm.length > 1 ? (\r\n                    filteredResults.map((item) => {\r\n                        return (\r\n                            <Card>\r\n                                <Card.Content>\r\n                                    <Card.Header>\r\n                                        <h5>Movies</h5>\r\n                                    </Card.Header>\r\n                                    <Card.Description>\r\n                                          {item.movieId}\r\n                                          {item.title}\r\n                                          {item.genre}\r\n                                          {item.castByMovie}                                                                   \r\n                                    </Card.Description>\r\n                                </Card.Content>\r\n                            </Card>\r\n                        )\r\n                    })\r\n                ) : (\r\n                    APIData.map((item) => {\r\n                        return (\r\n                            <Card>\r\n                                <Card.Content>\r\n                                    <Card.Header>\r\n                                        <h5>Movies</h5>\r\n                                    </Card.Header>\r\n                                    <Card.Description>\r\n                                        <div>\r\n                                            <p>Movie Id: {item.movieId} </p>\r\n                                            <p>Title: {item.title} </p>\r\n                                            <p>Genre: {item.genre} </p>\r\n                                            <p>Main Cast</p>\r\n                                            <p>Genre: {item.castByMovie} </p>\r\n                                        </div>  \r\n                                    </Card.Description>\r\n                                </Card.Content>\r\n                            </Card>\r\n                        )\r\n                    })\r\n                )}\r\n            </Card.Group>\r\n        </div>\r\n    )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}