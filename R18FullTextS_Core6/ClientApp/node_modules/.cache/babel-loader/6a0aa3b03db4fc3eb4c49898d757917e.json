{"ast":null,"code":"var _jsxFileName = \"F:\\\\Ready to use\\\\GITMS\\\\REACT_FTS_FULL\\\\LAB\\\\ClientApp\\\\src\\\\components\\\\MovieModal.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { Modal, ModalBody, ModalHeader, Form, FormGroup, Input, Label, ModalFooter, Button } from \"reactstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst modelMovie = {\n  movieid: 0,\n  title: \"\"\n};\n\nconst MovieModal = _ref => {\n  _s();\n\n  let {\n    showModal,\n    setShowModal,\n    saveMovie,\n    edit,\n    setEdit,\n    editMovie\n  } = _ref;\n  const [movie, setMovie] = useState(modelMovie); //const parsed_link = JSON.parse(movie.castbymovie);\n  //console.log(movie.castByMovie);\n\n  const myArray = text.split(movie.castByMovie);\n  let word = myArray[1];\n  console.log(word); //let jsonValid = true\n  //Object.keys(movie.castByMovie).forEach((key) => {\n  //    if (movie.castByMovie[key] == \"\") {\n  //      let valid = false\n  //    }\n  //})\n  //console.log(jsonValid)\n\n  const updateData = e => {\n    console.log(e.target.name + \" : \" + e.target.value);\n    setMovie({ ...movie,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const sendData = () => {\n    if (movie.movieId == 0) {\n      saveMovie(movie);\n    } else {\n      editMovie(movie);\n    }\n\n    setMovie(modelMovie);\n  };\n\n  useEffect(() => {\n    if (edit != null) {\n      setMovie(edit);\n    } else {\n      setMovie(modelMovie);\n    }\n  }, [edit]);\n\n  const closeModal = () => {\n    setShowModal(!showModal);\n    setEdit(null);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: showModal,\n    children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n      children:\n      /*{movie.id == 0 ? \"New Movie\" : \"Edit Movie\"} */\n      \"Movie Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Movie Id: \", movie.movieId, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Title: \", movie.title, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Genre: \", movie.genre, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Main Cast\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Genre: \", movie.castByMovie, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        color: \"danger\",\n        size: \"sm\",\n        onClick: closeModal,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MovieModal, \"yTyyuwO/00awn1UYNg0zi8LrKys=\");\n\n_c = MovieModal;\nexport default MovieModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieModal\");","map":{"version":3,"names":["useEffect","useState","Modal","ModalBody","ModalHeader","Form","FormGroup","Input","Label","ModalFooter","Button","modelMovie","movieid","title","MovieModal","showModal","setShowModal","saveMovie","edit","setEdit","editMovie","movie","setMovie","myArray","text","split","castByMovie","word","console","log","updateData","e","target","name","value","sendData","movieId","closeModal","genre"],"sources":["F:/Ready to use/GITMS/REACT_FTS_FULL/LAB/ClientApp/src/components/MovieModal.js"],"sourcesContent":["import { useEffect, useState } from 'react'\r\nimport { Modal, ModalBody, ModalHeader, Form, FormGroup, Input, Label, ModalFooter, Button } from \"reactstrap\"\r\n\r\nconst modelMovie = {\r\n    movieid: 0,\r\n    title: \"\"\r\n}\r\n\r\nconst MovieModal = ({ showModal, setShowModal, saveMovie, edit, setEdit, editMovie }) => {\r\n\r\n\r\n    const [movie, setMovie] = useState(modelMovie);\r\n    //const parsed_link = JSON.parse(movie.castbymovie);\r\n    //console.log(movie.castByMovie);\r\n\r\n    const myArray = text.split(movie.castByMovie);\r\n    let word = myArray[1];\r\n    console.log(word);\r\n\r\n    //let jsonValid = true\r\n    //Object.keys(movie.castByMovie).forEach((key) => {\r\n    //    if (movie.castByMovie[key] == \"\") {\r\n    //      let valid = false\r\n    //    }\r\n    //})\r\n    //console.log(jsonValid)\r\n\r\n\r\n    const updateData = (e) => {\r\n\r\n        console.log(e.target.name + \" : \" + e.target.value)\r\n\r\n        setMovie(\r\n            {\r\n                ...movie,\r\n                [e.target.name]: e.target.value\r\n            }\r\n        )\r\n    }\r\n\r\n    const sendData = () => {\r\n\r\n        if (movie.movieId == 0) {\r\n            saveMovie(movie)\r\n        } else {\r\n            editMovie(movie)\r\n        }\r\n\r\n        setMovie(modelMovie)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (edit != null) {\r\n            setMovie(edit)\r\n        } else {\r\n            setMovie(modelMovie)\r\n        }\r\n    }, [edit])\r\n\r\n\r\n    const closeModal = () => {\r\n\r\n        setShowModal(!showModal)\r\n        setEdit(null)\r\n    }\r\n\r\n    return (\r\n\r\n        <Modal isOpen={showModal}>\r\n            <ModalHeader>\r\n                {\r\n                    /*{movie.id == 0 ? \"New Movie\" : \"Edit Movie\"} */\r\n                    \"Movie Details\"\r\n                }\r\n            </ModalHeader>\r\n            <ModalBody>\r\n                <Form>\r\n                    <div>\r\n                        <p>Movie Id: {movie.movieId} </p>\r\n                        <p>Title: {movie.title} </p>                    \r\n                        <p>Genre: {movie.genre} </p>\r\n                        <p>Main Cast</p>\r\n                        <p>Genre: {movie.castByMovie} </p>\r\n                    </div>              \r\n          \r\n                </Form>\r\n            </ModalBody>\r\n            <ModalFooter>             \r\n                <Button color=\"danger\" size=\"sm\" onClick={closeModal}>Close</Button>\r\n            </ModalFooter>\r\n        </Modal>\r\n    )\r\n\r\n}\r\n\r\nexport default MovieModal;"],"mappings":"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"},"metadata":{},"sourceType":"module"}